import asyncio
import json
import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.utils import executor
from datetime import datetime, timedelta

TOKEN = '7414197933:AAHJ10jJ7vgW7LSQIwZazM41GBfXeBi1iC4'
CHANNEL_LINK = 'https://t.me/+SicNwm_RIoZlODNk'
SECOND_CHANNEL = 'https://t.me/+SicNwm_RIoZlODNk'

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

DATA_FILE = "users.json"

if not os.path.exists(DATA_FILE):
    with open(DATA_FILE, 'w') as f:
        json.dump({}, f)

def load_data():
    with open(DATA_FILE, 'r') as f:
        return json.load(f)

def save_data(data):
    with open(DATA_FILE, 'w') as f:
        json.dump(data, f)

def get_user(uid):
    data = load_data()
    if str(uid) not in data:
        data[str(uid)] = {
            "stars": 0,
            "invited": [],
            "last_bonus": "2000-01-01"
        }
        save_data(data)
    return data[str(uid)]

def update_user(uid, user_data):
    data = load_data()
    data[str(uid)] = user_data
    save_data(data)

menu = ReplyKeyboardMarkup(resize_keyboard=True)
menu.add("üì• –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å –∑–≤—ë–∑–¥—ã", "üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π")
menu.add("üí∞ –í—ã–≤–µ—Å—Ç–∏ –∑–≤—ë–∑–¥—ã", "üèÜ –¢–æ–ø —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
menu.add("üéÅ –ë–æ–Ω—É—Å—ã", "‚ùì –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç")

@dp.message_handler(commands=['start'])
async def start(msg: types.Message):
    user = get_user(msg.from_user.id)
    text = f"‚≠ê –ü—Ä–∏–≤–µ—Ç, {msg.from_user.first_name}!\n\n" \
           f"–¢—É—Ç —Ç—ã –º–æ–∂–µ—à—å –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –∑–≤—ë–∑–¥—ã –∏ –≤—ã–≤–æ–¥–∏—Ç—å –∏—Ö.\n\n" \
           f"–ù–∞—á–∏–Ω–∞–π —Å –∫–Ω–æ–ø–æ–∫ –Ω–∏–∂–µ!"
    await msg.answer(text, reply_markup=menu)

    if msg.get_args():
        ref_id = msg.get_args()
        if ref_id != str(msg.from_user.id):
            data = load_data()
            ref_user = data.get(ref_id)
            if ref_user and msg.from_user.id not in ref_user["invited"]:
                ref_user["invited"].append(msg.from_user.id)
                ref_user["stars"] += 25
                update_user(int(ref_id), ref_user)
                await bot.send_message(int(ref_id), f"üéâ –¢–µ–±–µ +25 –∑–≤—ë–∑–¥ –∑–∞ –¥—Ä—É–≥–∞ @{msg.from_user.username or msg.from_user.first_name}")

@dp.message_handler(lambda m: m.text == "üì• –ó–∞—Ä–∞–±–æ—Ç–∞—Ç—å –∑–≤—ë–∑–¥—ã")
async def earn(msg: types.Message):
    await msg.answer(f"‚úÖ –ó–∞ –∫–∞–∂–¥–æ–≥–æ ‚Äî +25 –∑–≤—ë–∑–¥"
                     f"üë• –ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –ø–æ —Å—Å—ã–ª–∫–µ:\n"
                     f"{CHANNEL_LINK}")

@dp.message_handler(lambda m: m.text == "üë• –ü—Ä–∏–≥–ª–∞—Å–∏—Ç—å –¥—Ä—É–∑–µ–π")
async def invite(msg: types.Message):
    user = get_user(msg.from_user.id)
    await msg.answer(f"üë• –¢—ã –ø—Ä–∏–≥–ª–∞—Å–∏–ª: {len(user['invited'])} –¥—Ä—É–∑–µ–π\n"
                     f"üü° –£ —Ç–µ–±—è: {user['stars']} –∑–≤—ë–∑–¥\n"
                     f"–¢–≤–æ—è —Å—Å—ã–ª–∫–∞: {CHANNEL_LINK}")

@dp.message_handler(lambda m: m.text == "üí∞ –í—ã–≤–µ—Å—Ç–∏ –∑–≤—ë–∑–¥—ã")
async def withdraw(msg: types.Message):
    user = get_user(msg.from_user.id)
    stars = user["stars"]
    invited = len(user["invited"])
    if stars < 1000:
        left = 1000 - stars
        need = max(0, (left + 24) // 25)
        await msg.answer(f"‚ùó –í—ã–≤–æ–¥ –≤–æ–∑–º–æ–∂–µ–Ω —Ç–æ–ª—å–∫–æ –æ—Ç 1000 –∑–≤—ë–∑–¥\n"
                         f"–£ —Ç–µ–±—è: {stars} –∑–≤—ë–∑–¥\n\n"
                         f"–ü—Ä–∏–≥–ª–∞—Å–∏ –µ—â—ë {need} –¥—Ä—É–∑–µ–π, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –≤—ã–ø–ª–∞—Ç—É\n"
                         f"üí∏ –ù–µ –∑–∞–±—É–¥—å: –≤—ã–≤–æ–¥ –≤–æ–∑–º–æ–∂–µ–Ω —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –∞–∫–∫–∞—É–Ω—Ç–æ–≤ (—É –∫–æ—Ç–æ—Ä—ã—Ö 40+ –¥—Ä—É–∑–µ–π).")
    else:
        await msg.answer("üîê –ó–∞—è–≤–∫–∞ –Ω–∞ –≤—ã–≤–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.\n"
                         "üí¨ –û—Ç–≤–µ—Ç –ø—Ä–∏–¥—ë—Ç –≤ —Ç–µ—á–µ–Ω–∏–µ 7 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.\n\n"
                         f"üëÄ –•–æ—Ç–∏—Ç–µ —É—Å–∫–æ—Ä–∏—Ç—å? –ü–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –Ω–∞—à –≤—Ç–æ—Ä–æ–π –∫–∞–Ω–∞–ª: {SECOND_CHANNEL}\n"
                         "–ò –ø—Ä–∏–≥–ª–∞—Å–∏—Ç–µ –µ—â—ë 5 –¥—Ä—É–∑–µ–π!")

@dp.message_handler(lambda m: m.text == "üèÜ –¢–æ–ø —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
async def top(msg: types.Message):
    data = load_data()
    sorted_users = sorted(data.items(), key=lambda x: x[1]["stars"], reverse=True)[:10]
    text = "üèÜ –¢–æ–ø 10 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:\n\n"
    for i, (uid, udata) in enumerate(sorted_users, 1):
        name = f"@user{uid}"  # –∑–∞–º–µ–Ω–∏—Ç—å –ø–æ –∂–µ–ª–∞–Ω–∏—é
        text += f"{i}) {name} ‚Äî {udata['stars']}‚≠ê\n"
    await msg.answer("""ü•á 1 –º–µ—Å—Ç–æ ‚Äî –≠—Ä–∏–∫ –î–∂–∞–Ω
‚úÖ –í—ã–≤–µ–ª —É–∂–µ 5 000+ –∑–≤—ë–∑–¥
‚úÖ –ê–∫—Ç–∏–≤–µ–Ω –∫–∞–∂–¥—ã–π –¥–µ–Ω—å
‚úÖ –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç –¥—Ä—É–∑—å—è–º
üî• –ù–∞—Å—Ç–æ—è—â–∏–π —Ç–æ–ø! –ë–µ–∑ –ª–∏—à–Ω–µ–≥–æ —à—É–º–∞ ‚Äî –ø—Ä–æ—Å—Ç–æ –¥–µ–ª–∞–µ—Ç –±–∞–±–∫–∏.
‚ú≥Ô∏è –£—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è: ‚≠ê‚≠ê‚≠ê‚≠ê‚≠ê

ü•à 2 –º–µ—Å—Ç–æ ‚Äî Zuuulol
‚úÖ –í—ã–≤–µ–ª —É–∂–µ 1500+ –∑–≤—ë–∑–¥
‚úÖ –ü—Ä–∏–≥–ª–∞—à–∞–µ—Ç –ª—é–¥–µ–π
‚úÖ –í—ã–ø–æ–ª–Ω—è–µ—Ç –≤—Å–µ —É—Å–ª–æ–≤–∏—è
‚ö° –ò–¥—ë—Ç –∫ –≤–µ—Ä—à–∏–Ω–µ —É–≤–µ—Ä–µ–Ω–Ω–æ
‚ú≥Ô∏è –£—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è: ‚≠ê‚≠ê‚≠ê‚≠ê

ü•â 3 –º–µ—Å—Ç–æ ‚Äî mrBeast
‚úÖ –£—á–∞—Å—Ç–≤—É–µ—Ç –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö
‚úÖ –î–µ–ª–∏—Ç—Å—è –±–æ—Ç–æ–º —Å –¥—Ä—É–∑—å—è–º–∏
‚úÖ –ù–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ä–µ–ø—É—Ç–∞—Ü–∏—é
üìà –°–∫–æ—Ä–æ –ø–æ–¥–Ω–∏–º–µ—Ç—Å—è –≤—ã—à–µ
‚ú≥Ô∏è –£—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è: ‚≠ê‚≠ê‚≠ê

üèÖ 4 –º–µ—Å—Ç–æ ‚Äî MaksQunem
‚úÖ –ï—Å—Ç—å –ø–µ—Ä–≤—ã–µ –≤—ã–≤–æ–¥—ã
‚úÖ –ü—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –ø–æ—à–ª–∏
üí™ –í—Ä—ã–≤–∞–µ—Ç—Å—è –≤ —Ç–∞–±–ª–∏—Ü—É –ª–∏–¥–µ—Ä–æ–≤
‚ú≥Ô∏è –£—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è: ‚≠ê‚≠ê

üéñ 5 –º–µ—Å—Ç–æ ‚Äî BenjaminFranclin
‚úÖ –¢–æ–ª—å–∫–æ –Ω–∞—á–∞–ª, –Ω–æ —É–∂–µ –≤ —Ç–æ–ø–µ
‚úÖ –ü—Ä–æ—è–≤–ª—è–µ—Ç –∞–∫—Ç–∏–≤
‚è≥ –í—Å—ë —Ç–æ–ª—å–∫–æ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è
‚ú≥Ô∏è –£—Ä–æ–≤–µ–Ω—å –¥–æ–≤–µ—Ä–∏—è: ‚≠ê""")

@dp.message_handler(lambda m: m.text == "üéÅ –ë–æ–Ω—É—Å—ã")
async def bonus(msg: types.Message):
    user = get_user(msg.from_user.id)
    last = datetime.strptime(user["last_bonus"], "%Y-%m-%d")
    if datetime.now() - last >= timedelta(days=1):
        user["stars"] += 10
        user["last_bonus"] = datetime.now().strftime("%Y-%m-%d")
        update_user(msg.from_user.id, user)
        await msg.answer("üéâ –¢—ã –ø–æ–ª—É—á–∏–ª +10 –∑–≤—ë–∑–¥ –∑–∞ –µ–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å!")
    else:
        await msg.answer("‚ùå –¢—ã —É–∂–µ –ø–æ–ª—É—á–∞–ª –±–æ–Ω—É—Å —Å–µ–≥–æ–¥–Ω—è. –í–æ–∑–≤—Ä–∞—â–∞–π—Å—è –∑–∞–≤—Ç—Ä–∞!")

@dp.message_handler(lambda m: m.text == "‚ùì –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç")
async def how(msg: types.Message):
    await msg.answer("üìñ –ö–∞–∫ –≤—Å—ë —Ä–∞–±–æ—Ç–∞–µ—Ç:\n\n"
                     "1. –ü—Ä–∏–≥–ª–∞—à–∞–π –¥—Ä—É–∑–µ–π –ø–æ —Å—Å—ã–ª–∫–µ\n"
                     "2. –ó–∞ –∫–∞–∂–¥–æ–≥–æ –¥—Ä—É–≥–∞ ‚Äî +25 –∑–≤—ë–∑–¥\n"
                     "3. –ë–æ–Ω—É—Å—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å ‚Äî +10 –∑–≤—ë–∑–¥\n"
                     "4. –° 1000 –∑–≤—ë–∑–¥ –º–æ–∂–Ω–æ –ø–æ–¥–∞—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –≤—ã–≤–æ–¥\n\n"
                     f"üßæ –ù–µ –∑–∞–±—É–¥—å –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª: {CHANNEL_LINK}")

if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)
